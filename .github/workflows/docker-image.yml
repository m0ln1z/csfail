name: Deploy Notification Bot
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Формирование тега Docker-образа на основе короткого SHA коммита
      - name: Set Docker image tag
        id: set_tag
        run: |
          TAG=$(git rev-parse --short HEAD)
          echo "DOCKER_TAG=${TAG}" >> $GITHUB_ENV
          echo "Docker tag set to ${TAG}"

      # 3. Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Сборка и пуш Docker-образа
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: "m0ln1z/selenium-bot:${{ env.DOCKER_TAG }}"

      # 5. Настройка SSH для деплоя
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 6. Деплой на сервер
      - name: Deploy to server
        env:
          DOCKER_TAG: ${{ env.DOCKER_TAG }}
        run: |
          ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} "
          echo 'Проверка наличия Docker...' &&
          if ! command -v docker &> /dev/null
          then
              echo 'Docker не установлен. Устанавливаем Docker...' &&
              sudo apt-get update &&
              sudo apt-get remove -y docker docker-engine docker.io containerd runc || true &&
              sudo apt-get install -y ca-certificates curl gnupg lsb-release &&
          
              sudo mkdir -p /etc/apt/keyrings &&
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg &&
          
              echo \"deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable\" \
                | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&
          
              sudo apt-get update &&
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io &&
              sudo systemctl start docker &&
              sudo systemctl enable docker
          else
              echo 'Docker уже установлен.'
          fi &&
          
          echo 'Логин в Docker Hub...' &&
          echo '${{ secrets.DOCKER_PASSWORD }}' | sudo docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin &&
          
          echo 'Загрузка обновлённого образа...' &&
          sudo docker pull m0ln1z/selenium-bot:${DOCKER_TAG} &&
          
          echo 'Остановка старого контейнера...' &&
          sudo docker stop selenium-bot || sudo docker kill selenium-bot || true &&
          
          # Даём Docker время корректно завершить контейнер
          sleep 3 &&
          
          echo 'Удаление старого контейнера...' &&
          sudo docker rm -f selenium-bot || true &&
          
          echo 'Запуск нового контейнера...' &&
          sudo docker run -d \
            --name selenium-bot \
            --restart=unless-stopped \
            --memory=2g \
            --memory-swap=2g \
            --cpus=2 \
            --shm-size=256m \
            -e BOT_TOKEN='${{ secrets.BOT_TOKEN }}' \
            -e CHAT_ID='${{ secrets.CHAT_ID }}' \
            m0ln1z/selenium-bot:${DOCKER_TAG}
          "