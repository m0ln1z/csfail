name: Deploy Notification Bot
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Формирование тега Docker-образа на основе короткого SHA коммита
      - name: Set Docker image tag
        id: set_tag
        run: |
          TAG=$(git rev-parse --short HEAD)
          echo "DOCKER_TAG=${TAG}" >> $GITHUB_ENV
          echo "Docker tag set to ${TAG}"

      # 3. Логин в Docker Hub
      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      # 4. Сборка и пуш Docker-образа
      - name: Build and push Docker image
        run: |
          docker build -t "m0ln1z/selenium-bot:${{ env.DOCKER_TAG }}" .
          docker push "m0ln1z/selenium-bot:${{ env.DOCKER_TAG }}"

      # 5. Деплой на сервер
      - name: Deploy to server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          DOCKER_TAG: ${{ env.DOCKER_TAG }}
        run: |
          sshpass -p "${SSH_PASSWORD}" ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} "
          echo 'Установка Docker (если не установлен) из официального репозитория...' &&
          sudo apt-get update &&
          sudo apt-get remove -y docker docker-engine docker.io containerd runc || true &&
          sudo apt-get install -y ca-certificates curl gnupg lsb-release &&

          sudo mkdir -p /etc/apt/keyrings &&
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg &&

          echo \"deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable\" \
            | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&

          sudo apt-get update &&
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io &&
          sudo systemctl start docker &&
          sudo systemctl enable docker &&

          echo 'Логин в Docker Hub...' &&
          docker login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}' &&

          echo 'Загрузка обновлённого образа...' &&
          docker pull m0ln1z/selenium-bot:${DOCKER_TAG} &&

          echo 'Остановка старого контейнера...' &&
          docker stop selenium-bot || docker kill selenium-bot || true &&

          # Даём Docker время корректно завершить контейнер
          sleep 3 &&

          echo 'Удаление старого контейнера...' &&
          docker rm -f selenium-bot || true &&

          echo 'Запуск нового контейнера...' &&
          docker run -d \
            --name selenium-bot \
            --restart=always \
            --memory=2g \
            --memory-swap=2g \
            --cpus=2 \
            --shm-size=256m \
            m0ln1z/selenium-bot:${DOCKER_TAG}
          "