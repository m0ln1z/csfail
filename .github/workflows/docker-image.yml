name: Deploy Notification Bots

on:
  push:
    branches:
      - main

jobs:
  deploy_35x_bot:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Формирование тега Docker-образа на основе короткого SHA коммита
      - name: Set Docker image tag for 35x bot
        id: set_tag_35x
        run: |
          TAG=$(git rev-parse --short HEAD)
          echo "DOCKER_TAG_35X=${TAG}" >> $GITHUB_ENV
          echo "Docker tag for 35x bot set to ${TAG}"

      # 3. Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Сборка и пуш Docker-образа для 35x бота
      - name: Build and push Docker image for 35x bot
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: "m0ln1z/selenium-bot-35x:${{ env.DOCKER_TAG_35X }}"

      # 4.1. Установка sshpass
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      # 5. Деплой на сервер для 35x бота
      - name: Deploy 35x bot to server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          DOCKER_TAG_35X: ${{ env.DOCKER_TAG_35X }}
          BOT_TOKEN_35X: ${{ secrets.BOT_TOKEN }}
          CHAT_ID_35X: ${{ secrets.CHAT_ID }}
        run: |
          sshpass -p "${SSH_PASSWORD}" ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} "
          # Проверка наличия Docker
          if ! command -v docker &> /dev/null
          then
              echo 'Docker не установлен. Устанавливаем Docker...' &&
              sudo apt-get update &&
              sudo apt-get remove -y docker docker-engine docker.io containerd runc || true &&
              sudo apt-get install -y ca-certificates curl gnupg lsb-release &&
              
              sudo mkdir -p /etc/apt/keyrings &&
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg &&
              
              echo \"deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable\" \
                | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&
              
              sudo apt-get update &&
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io &&
              sudo systemctl start docker &&
              sudo systemctl enable docker
          else
              echo 'Docker уже установлен.'
          fi &&
          
          # Логин в Docker Hub
          echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin &&
          
          # Пулл обновлённого образа для 35x бота
          docker pull m0ln1z/selenium-bot-35x:${DOCKER_TAG_35X} &&
          
          # Остановка и удаление старого контейнера
          docker stop selenium-bot-35x || docker kill selenium-bot-35x || true &&
          docker rm -f selenium-bot-35x || true &&
          
          # Запуск нового контейнера для 35x бота с передачей переменных окружения
          docker run -d \
            --name selenium-bot-35x \
            --restart=unless-stopped \
            --memory=2g \
            --memory-swap=2g \
            --cpus=2 \
            --shm-size=256m \
            -e BOT_TOKEN_35X='${BOT_TOKEN_35X}' \
            -e CHAT_ID_35X='${CHAT_ID_35X}' \
            m0ln1z/selenium-bot-35x:${DOCKER_TAG_35X}
          "

  deploy_234x_bot:
    runs-on: ubuntu-latest
    needs: deploy_35x_bot  # Если нужно, чтобы деплой второго бота происходил после первого

    steps:
      # 1. Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Формирование тега Docker-образа на основе короткого SHA коммита
      - name: Set Docker image tag for 2x,3x,4x bot
        id: set_tag_234x
        run: |
          TAG=$(git rev-parse --short HEAD)
          echo "DOCKER_TAG_234X=${TAG}" >> $GITHUB_ENV
          echo "Docker tag for 2x,3x,4x bot set to ${TAG}"

      # 3. Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Сборка и пуш Docker-образа для 2x,3x,4x бота
      - name: Build and push Docker image for 2x,3x,4x bot
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: "m0ln1z/selenium-bot-234x:${{ env.DOCKER_TAG_234X }}"

      # 4.1. Установка sshpass
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      # 5. Деплой на сервер для 2x,3x,4x бота
      - name: Deploy 2x,3x,4x bot to server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          DOCKER_TAG_234X: ${{ env.DOCKER_TAG_234X }}
          BOT_TOKEN_234X: ${{ secrets.BOT_TOKEN_234X }}
          CHAT_ID_234X: ${{ secrets.CHAT_ID_234X }}
        run: |
          sshpass -p "${SSH_PASSWORD}" ssh -o StrictHostKeyChecking=no ${SSH_USER}@${SSH_HOST} "
          # Проверка наличия Docker
          if ! command -v docker &> /dev/null
          then
              echo 'Docker не установлен. Устанавливаем Docker...' &&
              sudo apt-get update &&
              sudo apt-get remove -y docker docker-engine docker.io containerd runc || true &&
              sudo apt-get install -y ca-certificates curl gnupg lsb-release &&
              
              sudo mkdir -p /etc/apt/keyrings &&
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg &&
              
              echo \"deb [arch=\$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \$(lsb_release -cs) stable\" \
                | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null &&
              
              sudo apt-get update &&
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io &&
              sudo systemctl start docker &&
              sudo systemctl enable docker
          else
              echo 'Docker уже установлен.'
          fi &&
          
          # Логин в Docker Hub
          echo '${{ secrets.DOCKER_PASSWORD }}' | docker login -u '${{ secrets.DOCKER_USERNAME }}' --password-stdin &&
          
          # Пулл обновлённого образа для 2x,3x,4x бота
          docker pull m0ln1z/selenium-bot-234x:${DOCKER_TAG_234X} &&
          
          # Остановка и удаление старого контейнера
          docker stop selenium-bot-234x || docker kill selenium-bot-234x || true &&
          docker rm -f selenium-bot-234x || true &&
          
          # Запуск нового контейнера для 2x,3x,4x бота с передачей переменных окружения
          docker run -d \
            --name selenium-bot-234x \
            --restart=unless-stopped \
            --memory=2g \
            --memory-swap=2g \
            --cpus=2 \
            --shm-size=256m \
            -e BOT_TOKEN_234X='${BOT_TOKEN_234X}' \
            -e CHAT_ID_234X='${CHAT_ID_234X}' \
            m0ln1z/selenium-bot-234x:${DOCKER_TAG_234X}
          "